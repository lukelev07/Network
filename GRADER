                                     GRADER

Name of student running submit: Luke Levis
Login of student running submit: cs61b-pt

Second team member's name: Don Wook Shin
Second team member's login: cs61b-jt

Third team member's name (if any): Sherry Xu
Third team member's login: cs61b-avp

IMPORTANT:  Once you've submitted Project 2 once, the same team member should
submit always.  If a different teammate must submit, inform cs61b@cory.eecs of
all the details.  Include a complete list of team members, and let us know
which submission you want graded.

If you've submitted your project once, or even written a substantial amount of
code together, you may not change partners without the permission of the
instructor.
===============================================================================
Does your program compile without errors?

Yes

Have you tested your program on the 61B lab machines?

Yes

Did you successfully implement game tree search?  Did you successfully
implement alpha-beta pruning?  Are there any limitations on it?  What is the
default number of search levels set by the one-parameter MachinePlayer
constructor (or is it a variable-depth search)?

Yes, everything was successfully limited. We have the search level default to a sdepth variable, currently set at 2.


Describe your board evaluation function in some detail.


Does your MachinePlayer use any special method of choosing the first few moves?

We place 3 chips down, one in each goal, and one in the center. This helps initiate some connections.


Is there anything else the graders should know to help them read your project?

Not really, thanks for reading!



Describe the classes, modules, and interfaces you designed before and while you
implemented the project.  Your description should include:
  -  A list of the classes your program uses.
  -  A list of each of the "modules" used in or by MachinePlayer, similar to
     the list in the "Teamwork" section of the README (but hopefully more
     detailed).  (If you're using a list class, that should probably count as
     a separate module.)
  -  For each module, list the class(es) the module is implemented in.
  -  For each module, say which of your team members implemented it.
  -  For each module, describe its interface--specifically, the prototype and
     behavior of each method that is available for external callers (outside
     the module) to call.  Don't include methods that are only meant to be
     called from within the module.

     For each method, provide (1) a method prototype and (2) a complete,
     unambiguous description of the behavior of the method/module.  This
     description should also appear before the method in your code's comments.

You will probably need to change some of your design decisions as you go; be
sure to modify this file to reflect these changes before you submit your
project.  Your design of classes and interfaces will be worth 10% of your
grade.

- A list of the classes your program uses.
1. Board
2. Chip
3. MachinePlayer
4. Move
5. Player
6. RandomMove
7. BestMove
8. Set
9. List (Dlist and Slist)


===============================================================
Board
===============================================================

===============================================================
Chip
===============================================================

===============================================================
Move 
===============================================================

===============================================================
AI
===============================================================

===============================================================
List
===============================================================














